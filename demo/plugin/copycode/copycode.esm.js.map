{"version":3,"file":"copycode.esm.js","sources":["../../../src/plugin/js/helpers.js","../../../src/plugin/js/functions/get-pre-blocks.js","../../../src/plugin/js/functions/build-structure.js","../../../src/plugin/js/functions/style-button.js","../../../src/plugin/js/functions/do-clipboard.js","../../../src/plugin/js/plugin.js"],"sourcesContent":["/**\n * Check if a given string is valid JSON.\n * @param {string} str - The string to be checked.\n * @returns {boolean} `true` if the string is valid JSON, otherwise `false`.\n */\nexport const isJSON = str => {\n\ttry {\n\t\treturn (JSON.parse(str) && !!str);\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\n/**\n * Convert a NodeList into an array based on provided selectors.\n * @param {Element} container - The root element to begin querying.\n * @param {string} selectors - A string containing one or more CSS selectors separated by commas.\n * @returns {Element[]} Array of elements that match the given selectors.\n */\nexport const selectionArray = (container, selectors) => {\n\tlet selections = container.querySelectorAll(selectors);\n\tlet selectionarray = Array.prototype.slice.call(selections);\n\treturn selectionarray;\n};\n\n/**\n * Check if an element has child nodes that are `SECTION` elements.\n * @param {Object} param0 - Object with childNodes property.\n * @param {NodeListOf<ChildNode>} param0.childNodes - List of child nodes of the element.\n * @returns {boolean} `true` if the element contains `SECTION` child nodes, otherwise `false`.\n */\nexport const isStack = ({childNodes}) => {\n\tlet isStack = false;\n\tfor (let i = 0; i < childNodes.length; i++) {\n\t\tif (childNodes[i].tagName == \"SECTION\") {\n\t\t\tisStack = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn isStack;\n};\n\n/**\n * Copy data attributes from a source element to a target element with an optional exception.\n * @param {Object} param0 - Object with attributes property.\n * @param {NamedNodeMap} param0.attributes - Map of attributes of the source element.\n * @param {Element} target - Target element to copy attributes to.\n * @param {string} [not] - Optional attribute name to exclude from copying.\n */\nexport const copyDataAttributes = ({attributes}, target, not) => {\n\t[...attributes].filter(({nodeName}) => nodeName.includes('data')).forEach(({nodeName, nodeValue}) => {\n\t\tif ((not && nodeName !== not) || !not) {\n\t\t\ttarget.setAttribute(nodeName, nodeValue);\n\t\t}\n\t});\n};\n\n/**\n * Check if the given item is an object and not an array.\n * @param {*} item - The item to be checked.\n * @returns {boolean} `true` if the item is an object and not an array, otherwise `false`.\n */\nexport const isObject = (item) => {\n\treturn (item && typeof item === 'object' && !Array.isArray(item));\n}\n\n/**\n * Deep merge multiple objects into a target object.\n * @param {Object} target - Target object to merge values into.\n * @param {...Object} sources - Source objects to merge from.\n * @returns {Object} The merged object.\n */\nexport const mergeDeep = (target, ...sources) => {\n\tif (!sources.length) return target;\n\tconst source = sources.shift();\n\n\tif (isObject(target) && isObject(source)) {\n\t\tfor (const key in source) {\n\t\t\tif (isObject(source[key])) {\n\t\t\t\tif (!target[key]) Object.assign(target, { [key]: {} });\n\t\t\t\tmergeDeep(target[key], source[key]);\n\t\t\t} else {\n\t\t\t\tObject.assign(target, { [key]: source[key] });\n\t\t\t}\n\t\t}\n\t}\n\treturn mergeDeep(target, ...sources);\n}\n\n/**\n * Resolves the given Promise immediately using setTimeout.\n * @param {Function} resolve - The resolve function of a Promise.\n * @returns {number} The ID value of the timer that is set.\n */\nexport const doneLoading = (resolve) => {\n\treturn setTimeout(resolve, 0);\n}\n\n\n/**\n * Converts a JavaScript object or a JSON-formatted string to a JSON string.\n *\n * @param {Object|string} str - The input string or object to be converted to a JSON string.\n * @returns {string} The JSON string.\n */\nexport const toJSONString = (str) => {\n\tlet JSONString = ''\n\n\tif (typeof str === \"string\") str = str.replace(/[“”]/g,'\"').replace(/[‘’]/g,\"'\");\n\n\tif (isJSON(str)) {\n\t\tJSONString = str\n\t} else {\n\t\tif (typeof str === \"object\") {\n\t\t\tJSONString = JSON.stringify(str, null, 2)\n\t\t} else {\n\t\t\tJSONString = str.trim().replace(/'/g, '\"').charAt(0) === \"{\" ? str.trim().replace(/'/g, '\"') : `{${str.trim().replace(/'/g, '\"')}}`;\n\t\t}\n\t}\n\treturn JSONString;\n}\n\n\n/**\n * Dynamically loads a resource from the specified URL and calls a callback function when it's loaded.\n * Will not load the resource if it has already been loaded.\n *\n * @param {string} url - The URL of the resource to load.\n * @param {string} type - The type of resource to load.\n * @param {Function} callback - A callback function to be called when the resource is loaded.\n */\n\nexport const loadResource = (url, type, callback) => {\n\tlet head = document.querySelector('head');\n\tlet resource;\n\tlet alreadyExists = false;\n\n\tif (type === 'script') {\n\t\tif (!document.querySelector(`script[src=\"${url}\"]`)) {\n\t\t\tresource = document.createElement('script');\n\t\t\tresource.type = 'text/javascript';\n\t\t\tresource.src = url;\n\t\t} else { alreadyExists = true }\n\n\t} else if (type === 'stylesheet') {\n\n\t\tif (!document.querySelector(`link[href=\"${url}\"]`)) {\n\t\t\tresource = document.createElement('link');\n\t\t\tresource.rel = 'stylesheet';\n\t\t\tresource.href = url;\n\t\t} else { alreadyExists = true }\n\t}\n\n\tif (!alreadyExists) {\n\t\tconst finish = () => {\n\t\t\tif (typeof callback === 'function') {\n\t\t\tcallback.call();\n\t\t\tcallback = null;\n\t\t\t}\n\t\t};\n\t\tresource.onload = finish;\n\t\tresource.onreadystatechange = function () {\n\t\t\tif (this.readyState === 'loaded') {\n\t\t\t\tfinish();\n\t\t\t}\n\t\t};\n\t\thead.appendChild(resource);\n\t}\n}\n\n\n/**\n * Retrieves the path of a JavaScript file based on its filename.\n *\n * @param {string} fileName - The filename of the script.\n * @returns {string} The path to the plugin's location.\n */\nexport const pluginPath = (fileName) => {\n\tlet path;\n\tlet pluginScript = document.querySelector(`script[src$=\"${fileName}\"]`);\n\tif (pluginScript) {\n\t\tpath = pluginScript.getAttribute(\"src\").slice(0, -1 * (fileName.length));\n\t} else {\n\t\tpath = import.meta.url.slice(0, import.meta.url.lastIndexOf('/') + 1);\n\t}\n\treturn path;\n}\n\n\n/**\n * Check if element 'a' appears before element 'b' in the DOM tree.\n *\n * @param {HTMLElement} a - The first HTML element to compare.\n * @param {HTMLElement} b - The second HTML element to compare.\n * @returns {boolean|undefined} - Returns `true` if element 'a' appears before element 'b', `false` if 'b' appears before 'a', and `undefined` if the elements have no relative position in the DOM tree.\n */\nexport const isBefore = (a, b) => {\n    var all = document.getElementsByTagName('*');\n\n    for (var i = 0; i < all.length; ++i) {\n        if (all[i] === a) {\n            return true;\n        } else if (all[i] === b) {\n            return false;\n        }\n    }\n    // If the elements have no relative position in the DOM tree\n    return undefined;\n};\n\n\n/**\n * Check the number of occurrences of a specific element in an array.\n *\n * @param {Array} array - The array in which occurrences are to be counted.\n * @param {*} element - The element to be counted within the array.\n * @returns {number} - The count of occurrences of the specified element in the array.\n */\nexport const checkOccurrence = (array, element) => {\n    let counter = 0;\n    for (let i = 0; i < array.length; i++) {\n        if (array[i] == element) {\n            counter++;\n        }\n    }\n    return counter;\n};\n\n\n/**\n * Create an HTML element from a string of HTML.\n *\n * @param {string} thehtml - The string of HTML to be converted into an HTML element.\n * @returns {HTMLElement | null} - The HTML element created from the provided HTML string. Returns `null` if the element couldn't be created.\n */\nexport const createNode = (thehtml) => {\n    const fragment = document.createRange().createContextualFragment(thehtml);\n    return fragment.firstElementChild;\n};\n\n\n/**\n * Gets the index of the given DOM element within its parent's children.\n * @param {HTMLElement} elm - The target element.\n * @returns {number} - The index of the element within its parent's children.\n */\nexport const getNodeIndex = (elm) => [...elm.parentNode.children].indexOf(elm);\n\n\nexport const debugLog = (options, text) => {\n\tif (options.debug) console.log(text);\n}\n\n","import {buildStructure} from \"./build-structure.js\";\n\nexport const getPreBlocks = (preblocks, options, deck) => {\n\n\tlet revealEl = deck.getRevealElement();\n\n\trevealEl.style.setProperty('--cc-copy-bg',  options.copybg || options.style.copybg );\n\trevealEl.style.setProperty('--cc-copy-color', options.copycolor || options.style.copycolor);\n\trevealEl.style.setProperty('--cc-copied-bg', options.copiedbg || options.style.copiedbg);\n\trevealEl.style.setProperty('--cc-copied-color', options.copiedcolor || options.style.copiedcolor);\n\trevealEl.style.setProperty('--cc-scale', options.scale || options.style.scale);\n\trevealEl.style.setProperty('--cc-offset', options.offset || options.style.offset);\n\trevealEl.style.setProperty('--cc-radius', options.radius || options.style.radius);\n\trevealEl.style.setProperty('--cc-copyborder', options.copyborder || options.style.copyborder);\n\trevealEl.style.setProperty('--cc-copiedborder', options.copiedborder || options.style.copiedborder);\n\n\tpreblocks.forEach(preblock => buildStructure(preblock, options) );\n\n}","import {styleButton} from \"./style-button.js\";\n\nexport const buildStructure = (preblock, options) => {\n\n\tlet codeblock = null;\n\tlet dataHolder = preblock;\n\n\tif (options.quarto && preblock.parentNode.matches(\".sourceCode\")) {\n\t\t// Running in Quarto\n\t\tcodeblock = preblock.parentNode;\n\t\tdataHolder = codeblock;\n\n\t} else {\n\t\t// Not running in Quarto\n\t\tif (!preblock.parentNode.classList.contains(\"codeblock\")) {\n\t\t\tcodeblock = document.createElement(\"div\");\n\t\t\tpreblock.parentNode.insertBefore(codeblock, preblock);\n\t\t}\n\t}\n\n\tif (dataHolder.dataset.cc && dataHolder.dataset.cc == \"false\") {\n\t\treturn\n\t}\n\n\tif (codeblock) {\n\t\tcodeblock.classList.add(\"codeblock\");\n\n\t\t// Put the pre inside the wrapper\n\t\tcodeblock.appendChild(preblock);\n\n\t\tif (options.display == \"icons\" || options.display == \"both\") {\n\t\t\tdataHolder.dataset.ccDisplay = options.display;\n\t\t}\n\n\t\tif (preblock.classList.contains(\"fragment\")) {\n\t\t\tcodeblock.classList.add(\"fragment\");\n\t\t\tpreblock.classList.remove(\"fragment\")\n\t\t}\n\n\t\tlet button = document.createElement(\"button\");\n\t\tbutton.title=\"Copy to Clipboard\";\n\t\tbutton.textholder = button;\n\n\t\tif (options.button != \"always\" ) {\n\t\t\tbutton.dataset[\"cc\"] = options.button;\n\t\t}\n\n\t\tlet possibleAttributes = [\"cc\", \"ccCopy\", \"ccCopied\", \"ccDisplay\"];\n\n\t\tpossibleAttributes.forEach(attribute => {\n\t\t\tif (dataHolder.dataset[attribute]) {\n\t\t\t\tbutton.dataset[attribute] = dataHolder.dataset[attribute];\n\t\t\t\tdelete dataHolder.dataset[attribute];\n\t\t\t}\n\t\t} );\n\n\t\tlet code = preblock.querySelectorAll('code')[0];\n\t\tif (code && code.innerText) {\n\t\t\t// Style the button\n\t\t\tstyleButton(button, options);\n\t\t\t// Insert the button\n\t\t\tcodeblock.insertBefore(button, preblock);\n\t\t}\n\t}\n}\n","export const styleButton = (button, options) => {\n\n\tlet originalIconsvg = [];\n\toriginalIconsvg.copy = '<svg aria-hidden=\"true\" height=\"16\" width=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\"><path d=\"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z\"></path><path d=\"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z\"></path></svg>'\n\n\toriginalIconsvg.copied = '<svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\"><path d=\"M15.7,2.8c0.4,0.4,0.4,1,0,1.4L6,13.9c-0.4,0.4-1,0.4-1.4,0L0.3,9.6c-0.4-0.4-0.4-1,0-1.4c0.4-0.4,1-0.4,1.4,0l3.6,3.6l9-9C14.7,2.4,15.3,2.4,15.7,2.8z\"/></svg>'\n\n\tlet copysvg = options.iconsvg && options.iconsvg.copy != \"\" ? options.iconsvg.copy : originalIconsvg.copy;\n\tlet copiedsvg = options.iconsvg && options.iconsvg.copied != \"\" ? options.iconsvg.copied : originalIconsvg.copied;\n\n\t// If the button needs to be shown at all\n\tif ( button.dataset.cc != false && button.dataset.cc != \"false\" ) {\n\n\n\t\t// If icons are needed\n\t\tlet theDisplay = button.dataset.ccDisplay || options.display;\n\t\tif (theDisplay == \"icons\" || theDisplay == \"both\") {\n\n\t\t\t\tbutton.innerHTML = `<span></span>`;\n\t\t\t\tbutton.textholder = button.getElementsByTagName(\"SPAN\")[0];\n\t\t\t\tbutton.insertAdjacentHTML(\"afterbegin\", copiedsvg);\n\t\t\t\tbutton.insertAdjacentHTML(\"afterbegin\", copysvg);\n\n\t\t\t\t// If tooltip is wanted or not (global setting only)\n\t\t\t\tif ((button.dataset.ccDisplay && button.dataset.ccDisplay == \"icons\") && options.tooltip) {\n\t\t\t\t\tbutton.textholder.style.display = \"flex\"\n\t\t\t\t}\n\t\t}\n\n\t\t// If custom text, else the global text\n\t\tbutton.textholder.textContent = button.dataset.ccCopy ? button.dataset.ccCopy : (options.copy || options.text.copy);\n\n\t}\n}","export const doClipboard = (options) => {\n\n\tlet clipboard = options.plaintextonly == true ?\n\tnew ClipboardJS(\".codeblock > button\", {\n\t\ttext: function(trigger) {\n\t\t\tlet code = trigger.nextElementSibling.querySelectorAll('code')[0];\n\n\t\t\tconst table = code.querySelector('table');\n\t\t\tif (table == null) {\n\t\t\t\treturn code.innerText.replace(/^\\s+|\\s+$/g, \"\")\n\t\t\t}\n\n\t\t\tlet result = \"\";\n\n\t\t\tfor (let row of table.rows) {\n\t\t\t\tfor (let cell of row.cells) {\n\t\t\t\t\tif (cell.className.match(\"hljs-ln-numbers\")) {\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult += (cell.innerText + \"\\n\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result\n\t\t}}) :\n\tnew ClipboardJS(\".codeblock > button\", {\n\t\ttarget({nextElementSibling}) {\n\t\t\treturn nextElementSibling.nextElementSibling.querySelectorAll('code')[0]\n\t\t}}) ;\n\n\n\tclipboard.on(\"success\", e => {\n\n\t\tlet button = e.trigger;\n\t\te.clearSelection();\n\t\n\t\tbutton.dataset[\"textOriginal\"] =  button.textholder.innerHTML;\n\t\tbutton.textholder.innerHTML = button.dataset[\"ccCopied\"] ? button.dataset[\"ccCopied\"] : (options.copied || options.text.copied);\n\n\t\tbutton.setAttribute(\"disabled\", true);\n\t\n\t\tsetTimeout(() => {\n\t\t\tif ( (button.dataset.ccDisplay && button.dataset.ccDisplay != \"icons\") || (!button.dataset.ccDisplay) ) {\n\t\t\t\tbutton.textholder.innerHTML = button.getAttribute(\"data-text-original\");\n\t\t\t}\n\t\t\tbutton.removeAttribute(\"data-text-original\");\n\t\t\tbutton.removeAttribute(\"disabled\");\n\t\n\t\t}, options.timeout);\n\t});\n\n\tclipboard.on('error', e => {\n\t\tconsole.error('There was an error copying the code: ', e.action);\n\t});\n}","import { mergeDeep, pluginPath, loadResource } from './helpers';\n\nimport { getPreBlocks } from './functions/get-pre-blocks';\nimport { doClipboard } from './functions/do-clipboard';\n\nconst Plugin = () => {\n\n\tlet options = {};\n\n\t/**\n\t* The main function of the plugin\n\t* @param {object} deck - The deck object\n\t* @param {object} options - The options object\n\t* @param {string} es5Filename - The name of the file that will be used\n\t*/\n\tconst CopyCodeStart = function (deck, options, es5Filename) {\n\n\t\tlet thePath = pluginPath(es5Filename);\n\t\tlet pluginBaseName = es5Filename.replace(/\\.[^/.]+$/, \"\");\n\n\t\tlet ClipboardJSPath = options.clipboardjspath != \"\" ? options.clipboardjspath : null || \"https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.11/clipboard.min.js\";\n\t\tlet PluginStylePath = options.csspath ? options.csspath : null || `${thePath}${pluginBaseName}.css` || `plugin/${pluginBaseName}/${pluginBaseName}.css`;\n\n\t\tconst generator = document.querySelector('[name=generator]');\n\t\toptions.quarto = (generator && generator.content.includes(\"quarto\")) ? true : false\n\n\t\tlet preblocks = [];\n\t\tlet codes = Array.from(deck.getRevealElement().querySelectorAll(\"code\"));\n\t\tcodes.forEach((code) => {\n\t\t\tif (code.parentNode.tagName === \"PRE\") {\n\t\t\t\tpreblocks = [...new Set([...preblocks, code.parentNode])];\n\t\t\t}\n\t\t});\n\n\t\tif (typeof ClipboardJS != \"function\") {\n\t\t\tloadResource(ClipboardJSPath, 'script', () => {\n\t\t\t\tif (typeof ClipboardJS === \"function\") {\n\t\t\t\t\tif (preblocks.length > 0) {\n\n\t\t\t\t\t\tif (options.cssautoload && !options.quarto) {\n\t\t\t\t\t\t\tloadResource(PluginStylePath, 'stylesheet', () => {\n\t\t\t\t\t\t\t\tgetPreBlocks(preblocks, options, deck);\n\t\t\t\t\t\t\t\tdoClipboard(options);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgetPreBlocks(preblocks, options, deck);\n\t\t\t\t\t\t\tdoClipboard(options);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"Clipboard.js did not load\");\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tif (preblocks.length > 0) {\n\t\t\t\tif (options.quarto) {\n\t\t\t\t\tgetPreBlocks(preblocks, options, deck);\n\t\t\t\t\tdoClipboard(options);\n\t\t\t\t} else {\n\t\t\t\t\tif (options.cssautoload) {\n\t\t\t\t\t\tloadResource(PluginStylePath, 'stylesheet', () => {\n\t\t\t\t\t\t\tgetPreBlocks(preblocks, options, deck);\n\t\t\t\t\t\t\tdoClipboard(options);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgetPreBlocks(preblocks, options, deck);\n\t\t\t\t\t\tdoClipboard(options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\n\t/**\n\t* Initialize the plugin\n\t* @param {object} deck - The deck object\n\t*/\n\tconst init = function (deck) {\n\n\t\tlet defaultOptions = {\n\t\t\tbutton: \"always\",\n\t\t\tdebug: true,\n\t\t\tdisplay: \"text\",\n\t\t\ttext: {\n\t\t\t\tcopy: \"Copy\",\n\t\t\t\tcopied: \"Copied!\",\n\t\t\t},\n\t\t\tplaintextonly: true,\n\t\t\ttimeout: 1000,\n\t\t\tstyle: {\n\t\t\t\tcopybg: \"orange\",\n\t\t\t\tcopiedbg: \"green\",\n\t\t\t\tcopycolor: \"black\",\n\t\t\t\tcopiedcolor: \"white\",\n\t\t\t\tcopyborder: \"\",\n\t\t\t\tcopiedborder: \"\",\n\t\t\t\tscale: 1,\n\t\t\t\toffset: 0,\n\t\t\t\tradius: 0\n\t\t\t},\n\t\t\ttooltip: true,\n\t\t\ticonsvg: {\n\t\t\t\tcopy: '',   // User can paste <svg>…</svg> code here\n\t\t\t\tcopied: ''  // User can paste <svg>…</svg> code here\n\t\t\t},\n\t\t\tcssautoload: true,\n\t\t\tcsspath: '',\n\t\t\tclipboardjspath: \"\"\n\t\t};\n\n\t\toptions = mergeDeep(defaultOptions, deck.getConfig().copycode || {});\n\n\t\tCopyCodeStart(deck, options, \"copycode.js\");\n\t};\n\n\treturn { id: 'copycode', init: init };\n};\n\nexport default Plugin;"],"names":["isObject","item","Array","isArray","mergeDeep","target","sources","length","source","shift","key","Object","assign","loadResource","url","type","callback","resource","head","document","querySelector","alreadyExists","createElement","src","rel","href","finish","call","onload","onreadystatechange","this","readyState","appendChild","getPreBlocks","preblocks","options","deck","revealEl","getRevealElement","style","setProperty","copybg","copycolor","copiedbg","copiedcolor","scale","offset","radius","copyborder","copiedborder","forEach","preblock","buildStructure","codeblock","dataHolder","quarto","parentNode","matches","classList","contains","insertBefore","dataset","cc","add","display","ccDisplay","remove","button","title","textholder","attribute","code","querySelectorAll","innerText","styleButton","originalIconsvg","copy","copied","copysvg","iconsvg","copiedsvg","theDisplay","innerHTML","getElementsByTagName","insertAdjacentHTML","tooltip","textContent","ccCopy","text","doClipboard","clipboard","plaintextonly","ClipboardJS","trigger","nextElementSibling","table","replace","result","row","rows","cell","cells","className","match","on","e","clearSelection","setAttribute","setTimeout","getAttribute","removeAttribute","timeout","console","error","action","Plugin","CopyCodeStart","es5Filename","thePath","fileName","path","pluginScript","slice","lastIndexOf","pluginPath","pluginBaseName","ClipboardJSPath","clipboardjspath","PluginStylePath","csspath","generator","content","includes","from","tagName","Set","cssautoload","log","id","init","debug","getConfig","copycode"],"mappings":"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"}